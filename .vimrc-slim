" ----------------------------- Vimrc Slim --------------------------------
"
" Slimmed-dowm vim configuration file for use on servers
"
" Installation:
"   Place this file at ~/.vimrc
"
" Plugins:
"   This config file uses vim-plug to install plugins
"
"   curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
"     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
"
"   vim +PlugInstall +PlugUpdate +qall!
"
" -------------------------------------------------------------------------


" ----- Initialize Plugins -----

call plug#begin('~/.vim/plugged')

" Syntax
Plug '2072/PHP-Indenting-for-VIm'
Plug 'StanAngeloff/php.vim'
Plug 'gavocanov/vim-js-indent'
Plug 'jelera/vim-javascript-syntax'
Plug 'jwalton512/vim-blade'
Plug 'kylef/apiblueprint.vim'
Plug 'leafgarland/typescript-vim'
Plug 'leshill/vim-json'
Plug 'othree/html5.vim'
Plug 'othree/javascript-libraries-syntax.vim'
Plug 'pearofducks/ansible-vim'
Plug 'tpope/vim-git'
Plug 'tpope/vim-markdown'
Plug 'wizicer/vim-jison'

" Actual Plugins
Plug 'AndrewRadev/splitjoin.vim'
Plug 'Raimondi/delimitMate'
Plug 'ervandew/supertab'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'justinmk/vim-dirvish'
Plug 'justinmk/vim-sneak'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'w0rp/ale'
Plug 'wellle/targets.vim'

" Colors
Plug 'altercation/vim-colors-solarized'

call plug#end()


" ----- General Config -----

autocmd!
filetype off

" Enable per-file indenting and highlighting
filetype plugin indent on
syntax on
set background=dark

" Stop vim dying with long lines
set synmaxcol=250

" Linebreaking options
set linebreak
set textwidth=100
set backspace=indent,eol,start

" Highlight matching bracket when closing
set showmatch

" Flash screen instead of audible error bell
set visualbell

" Options for searching in files
set nohlsearch
set smartcase
set ignorecase
set incsearch
set gdefault

" Indenting options
set autoindent
set expandtab
set shiftwidth=2
set smartindent
set smarttab
set softtabstop=2
set tabstop=2
set shiftround

" Automatically write and read
set autowriteall
set autoread

" Show cursor position in statusbar
set ruler

" Highlight current line
set cursorline

" Don't redraw in the middle of macros
set lazyredraw

" Rebalance windows on vim resize
autocmd VimResized * :wincmd =

" Enable spellcheck
set spelllang=en_us
syntax spell toplevel

" Disable backups and swap
set nobackup
set nowritebackup
set noswapfile


" ----- Custom mappings -----

" Disable ex mode
nnoremap Q <Nop>

" Make Y consistent with C and D
nnoremap Y y$

" Pinky savers
let mapleader = ","
map ; :
map ' `

" Window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Window resizing
nnoremap <Leader>k <C-w>=
nnoremap K <C-w>5><C-w>5+

" Line nagivation
nnoremap H ^
nnoremap L $

" Save easily
nnoremap <Leader>s :up<Cr>
nnoremap <Leader>S :Wall<Cr>

" File navigation
cnoremap %% <C-R>=expand('%:h').'/'<Cr>

" Use jk to esc out of insert/command mode
inoremap jk <Esc>
cnoremap jk <C-U><BS>


" ----- Plugins -----

" --- Solarized ---
" colorscheme solarized

" -- Dirvish ---
augroup my_dirvish_events
  autocmd!
  " Mapping to hide dot-prefixed files.
  autocmd FileType dirvish nnoremap <buffer>
    \ gh :keeppatterns g@\v/\.[^\/]+/?$@d<cr>
  " Sort folders at the top
  autocmd FileType dirvish
    \ sort r /[^\/]*$/
  " Mapping to copy selected file
  autocmd FileType dirvish nnoremap <buffer>
    \ gh :keeppatterns g@\v/\.[^\/]+/?$@d<cr>
augroup END
nmap <Leader>fnn -
nmap <Leader>fns :sp<Cr>-
nmap <Leader>fnv :vsp<Cr>-

" --- FZF ---
nnoremap <Leader>ff :Files<Cr>
nnoremap <Leader>fb :Buffers<Cr>
nnoremap <Leader>f/ :Ag<Space>
nnoremap <Leader>fl :Lines<Cr>
nnoremap <Leader>fs :Snippets<Cr>
nnoremap <Leader>fc :Commits<Cr>
nmap <Leader><Tab> <Plug>(fzf-maps-n)
xmap <Leader><Tab> <Plug>(fzf-maps-x)
omap <Leader><Tab> <Plug>(fzf-maps-o)
imap <C-x><C-k> <Plug>(fzf-complete-word)
imap <C-x><C-f> <Plug>(fzf-complete-path)
imap <C-x><C-j> <Plug>(fzf-complete-file-ag)
imap <C-x><C-l> <Plug>(fzf-complete-line)

" --- ALE ---
let g:ale_linters = {
\   'php': ['php -l'],
\}

" --- Javascript Libraries Syntax ---
let g:used_javascript_libs = 'jquery,angularjs,angularui,angularuirouter,requirejs'

" --- DelimitMate ---
let delimitMate_expand_cr = 1
let delimitMate_expand_space = 1
imap <Leader>, <Plug>delimitMateJumpMany

" -- PHP Syntax ---
function! PhpSyntaxOverride()
  hi! def link phpDocTags  phpDefine
  hi! def link phpDocParam phpType
endfunction
autocmd FileType php call PhpSyntaxOverride()
